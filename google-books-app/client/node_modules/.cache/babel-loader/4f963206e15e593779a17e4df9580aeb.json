{"ast":null,"code":"import _slicedToArray from \"/Users/be.cool/Desktop/upenn/homework/google-books-app/google-books-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/be.cool/Desktop/upenn/homework/google-books-app/google-books-app/client/src/pages/books/books.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\";\nimport { Label, Input, FormBtn } from \"../../components/Form/form.component\";\nimport BookDetails from \"../../components/BookDetails/book-details.component\";\n\nconst Books = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        books = _useState4[0],\n        setBooks = _useState4[1];\n\n  useEffect(() => {\n    if (search) API.searchBook(search).then(res => setBooks(res.data.items));\n  }, [search]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    event.target.blur();\n    const searchInputELement = document.querySelector(\".search-input\");\n    setSearch(searchInputELement.value);\n    searchInputELement.value = \"\";\n  };\n\n  const handleBookSaved = async event => {\n    const bookSaved = JSON.parse(event.target.dataset.data);\n    const savedBookInDB = await API.getBooks({\n      id: bookSaved.id\n    });\n    if (savedBookInDB.data.length !== 0) return alert('This book has been already saved!');\n    API.saveBook(bookSaved).then(res => alert('Successfully Saved')).catch(err => console.log(err));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"book-search-from\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"search-input-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Input, {\n    className: \"search-input inherit\",\n    name: \"search\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(FormBtn, {\n    className: \"btn inherit\",\n    type: \"submit\",\n    value: \"Search\",\n    onClick: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    className: \"result-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Results\"), React.createElement(\"div\", {\n    className: \"result-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, books.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, books.map(book => {\n    const id = book.id,\n          _book$volumeInfo = book.volumeInfo,\n          title = _book$volumeInfo.title,\n          authors = _book$volumeInfo.authors,\n          description = _book$volumeInfo.description,\n          thumbnail = _book$volumeInfo.imageLinks.thumbnail,\n          infoLink = _book$volumeInfo.infoLink;\n    const savedBook = {\n      id,\n      title,\n      authors,\n      description,\n      thumbnail,\n      infoLink\n    };\n    return React.createElement(BookDetails, {\n      key: book.id,\n      book: savedBook,\n      handleFunction: handleBookSaved,\n      action: \"save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  })) : React.createElement(\"h3\", {\n    style: {\n      \"textAlign\": \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"No Results to Display\")));\n};\n\nexport default Books;","map":{"version":3,"sources":["/Users/be.cool/Desktop/upenn/homework/google-books-app/google-books-app/client/src/pages/books/books.component.jsx"],"names":["React","useEffect","useState","API","Label","Input","FormBtn","BookDetails","Books","search","setSearch","books","setBooks","searchBook","then","res","data","items","handleFormSubmit","event","preventDefault","target","blur","searchInputELement","document","querySelector","value","handleBookSaved","bookSaved","JSON","parse","dataset","savedBookInDB","getBooks","id","length","alert","saveBook","catch","err","console","log","map","book","volumeInfo","title","authors","description","thumbnail","imageLinks","infoLink","savedBook"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../../utils/API\";\nimport { Label, Input, FormBtn } from \"../../components/Form/form.component\";\nimport BookDetails from \"../../components/BookDetails/book-details.component\";\n\nconst Books = () => {\n  const [search, setSearch] = useState(\"\");\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    if (search) API.searchBook(search).then(res => setBooks(res.data.items));\n  }, [search]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    event.target.blur();\n    const searchInputELement = document.querySelector(\".search-input\");\n    setSearch(searchInputELement.value);\n    searchInputELement.value = \"\";\n  };\n\n  const handleBookSaved = async event => {\n    const bookSaved = JSON.parse(event.target.dataset.data);\n    const savedBookInDB = await API.getBooks({id:bookSaved.id}) \n    if(savedBookInDB.data.length !== 0) return alert('This book has been already saved!');\n    API.saveBook(bookSaved).then(res => alert('Successfully Saved')).catch((err) => console.log(err))\n  };\n\n  return (\n    <div>\n      <form className=\"book-search-from\">\n        <Label className=\"search-input-label\" />\n        <Input\n          className=\"search-input inherit\"\n          name=\"search\"\n          placeholder=\"Search\"\n        />\n        <FormBtn className=\"btn inherit\" type=\"submit\" value=\"Search\" onClick={handleFormSubmit} />\n      </form>\n      <h1 className=\"result-title\">Results</h1>\n      <div className=\"result-container\">\n        {books.length ? (\n          <div>\n            {books.map(book =>{\n              const {id, volumeInfo: {title, authors, description, imageLinks: {thumbnail}, infoLink}} = book;\n              const savedBook= {id, title, authors, description, thumbnail, infoLink};\n              return (\n                <BookDetails key={book.id} book={savedBook} handleFunction={handleBookSaved} action=\"save\" />\n              )}\n            )}\n          </div>\n        ) : (\n          <h3 style={{\"textAlign\": \"center\"}}>No Results to Display</h3>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}